{"ast":null,"code":"var _jsxFileName = \"/Users/dipse/Projects/eventos-frontend/src/components/EventForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport API from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [images, setImages] = useState([]);\n  const createEvent = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('date', date);\n    for (let i = 0; i < images.length; i++) {\n      formData.append('images', images[i]);\n    }\n    await API.post('/events', formData);\n    alert('Evento creado');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createEvent,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"T\\xEDtulo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Descripci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: e => setImages(e.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Crear Evento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"BxpiAFBJjmDg8p6gJ0dCF+SEeEU=\");\n_c = EventForm;\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useState","API","jsxDEV","_jsxDEV","EventForm","_s","title","setTitle","description","setDescription","date","setDate","images","setImages","createEvent","e","preventDefault","formData","FormData","append","i","length","post","alert","onSubmit","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","files","_c","$RefreshReg$"],"sources":["/Users/dipse/Projects/eventos-frontend/src/components/EventForm.jsx"],"sourcesContent":["import { useState } from 'react';\nimport API from '../services/api';\n\nexport default function EventForm() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [images, setImages] = useState([]);\n\n  const createEvent = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('date', date);\n    for (let i = 0; i < images.length; i++) {\n      formData.append('images', images[i]);\n    }\n\n    await API.post('/events', formData);\n    alert('Evento creado');\n  };\n\n  return (\n    <form onSubmit={createEvent}>\n      <input value={title} onChange={e => setTitle(e.target.value)} placeholder=\"Título\" />\n      <textarea value={description} onChange={e => setDescription(e.target.value)} placeholder=\"Descripción\" />\n      <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n      <input type=\"file\" multiple onChange={e => setImages(e.target.files)} />\n      <button type=\"submit\">Crear Evento</button>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,KAAK,CAAC;IAC/BW,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEX,WAAW,CAAC;IAC3CS,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAC7B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;MACtCH,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEP,MAAM,CAACQ,CAAC,CAAC,CAAC;IACtC;IAEA,MAAMnB,GAAG,CAACqB,IAAI,CAAC,SAAS,EAAEL,QAAQ,CAAC;IACnCM,KAAK,CAAC,eAAe,CAAC;EACxB,CAAC;EAED,oBACEpB,OAAA;IAAMqB,QAAQ,EAAEV,WAAY;IAAAW,QAAA,gBAC1BtB,OAAA;MAAOuB,KAAK,EAAEpB,KAAM;MAACqB,QAAQ,EAAEZ,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrF9B,OAAA;MAAUuB,KAAK,EAAElB,WAAY;MAACmB,QAAQ,EAAEZ,CAAC,IAAIN,cAAc,CAACM,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzG9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACR,KAAK,EAAEhB,IAAK;MAACiB,QAAQ,EAAEZ,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,QAAQ;MAACR,QAAQ,EAAEZ,CAAC,IAAIF,SAAS,CAACE,CAAC,CAACa,MAAM,CAACQ,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxE9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEX;AAAC5B,EAAA,CA7BuBD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}